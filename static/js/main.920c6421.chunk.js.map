{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","getMovie","query","fetch","then","res","json","catch","Response","Error","FindMovie","memo","addMovie","useState","setQuery","setMovie","isLoading","setIsLoading","isError","setIsError","isIncluded","setIsIncluded","DEAFULT_PICTURE","useMemo","includedInList","some","handleFind","event","a","preventDefault","responseFromServer","Poster","Title","Plot","imdbID","newMovie","htmlFor","type","id","placeholder","value","onChange","target","cn","disabled","length","onClick","App","setMovies","handleAddMovie","useCallback","currentMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.920c6421.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=58db5af1';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import {\n  FC,\n  FormEvent,\n  useMemo,\n  useState,\n  memo,\n  ChangeEvent,\n} from 'react';\nimport cn from 'classnames';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\nimport './FindMovie.scss';\n\ntype Props = {\n  movies: Movie[];\n  addMovie: (newMovie: Movie) => void\n};\n\nexport const FindMovie: FC<Props> = memo(({ movies, addMovie }) => {\n  const [query, setQuery] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [isIncluded, setIsIncluded] = useState(false);\n\n  // eslint-disable-next-line max-len\n  const DEAFULT_PICTURE = useMemo(() => (\n    'https://via.placeholder.com/360x270.png?text=no%20preview'\n  ), []);\n\n  const includedInList = movies.some(({ imdbId }) => (\n    imdbId === movie?.imdbId\n  ));\n\n  const handleFind = async (event: FormEvent) => {\n    event.preventDefault();\n    setIsLoading(true);\n    setMovie(null);\n\n    try {\n      const responseFromServer = await getMovie(query);\n\n      if ('imdbID' in responseFromServer) {\n        const {\n          Poster,\n          Title,\n          Plot,\n          imdbID,\n        } = responseFromServer;\n\n        const newMovie = {\n          title: Title,\n          description: Plot,\n          imgUrl: Poster !== 'N/A'\n            ? Poster\n            : DEAFULT_PICTURE,\n          imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n          imdbId: imdbID,\n        };\n\n        setMovie(newMovie);\n      } else {\n        setIsError(true);\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleAdd = () => {\n    setQuery('');\n\n    if (!includedInList && movie) {\n      addMovie(movie);\n    } else {\n      setIsIncluded(true);\n    }\n\n    setMovie(null);\n  };\n\n  const handleInpute = (event: ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    setIsError(false);\n    setIsIncluded(false);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={query}\n              onChange={handleInpute}\n            />\n          </div>\n          {isError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n          {isIncluded && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              The movie is already on the list\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={cn(\n                'button',\n                'is-light',\n                {\n                  'is-loading': isLoading,\n                },\n              )}\n              disabled={!query.length}\n              onClick={handleFind}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAdd}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n});\n","import { useCallback, useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const handleAddMovie = useCallback((newMovie: Movie) => {\n    setMovies(currentMovies => [...currentMovies, newMovie]);\n  }, []);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          movies={movies}\n          addMovie={handleAddMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}